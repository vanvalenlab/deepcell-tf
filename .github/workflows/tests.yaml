# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on: [push, pull_request]

jobs:

  tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Check setting up a development environment from scratch. This step should
    # catch inconsistencies in the reqiurements files
    - name: Test development environment setup
      run: |
        python -m venv .dev
        source .dev/bin/activate
        python -m pip install --upgrade pip
        python -m pip list
        python -m pip install -r requirements.txt -r requirements-test.txt

    - name: Cache Python
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ env.pythonLocation }}-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade -r requirements.txt -r requirements-test.txt

    - name: PyTest
      run: |
        pytest --cov deepcell --pep8

    - name: Coveralls
      if: env.COVERALLS_REPO_TOKEN != null
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        coveralls

  coveralls:
    name: Finish Coveralls
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      if: env.COVERALLS_REPO_TOKEN != null
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true

  test-docker:
    name: Build Docker and Run Tests

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and Run Unit Tests
      env:
        IMAGE: ${{ github.repository }}:${{ github.sha }}
        NAME: deepcell-test
      run: |
        docker buildx build --load --tag ${{ env.IMAGE }} .
        docker run -d -it \
          --entrypoint=bash \
          --name ${{ env.NAME }} \
          ${{ env.IMAGE }}
        docker cp requirements-test.txt ${{ env.NAME }}:/opt/deepcell-tf/requirements-test.txt
        docker exec ${{ env.NAME }} pip install -r /opt/deepcell-tf/requirements-test.txt
        docker exec ${{ env.NAME }} pytest /opt/deepcell-tf/deepcell
        docker kill ${{ env.NAME }} && docker rm ${{ env.NAME }}

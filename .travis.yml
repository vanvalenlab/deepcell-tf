sudo: true
dist: xenial

git:
  depth: false

language: python

python:
  - 2.7
  - 3.6
  - 3.7

env:
  - TF_VERSION=1.14.0
  - TF_VERSION=1.15.0

install:
  # code below is taken from https://github.com/keras-team/keras/blob/master/.travis.yml

  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - travis_retry conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

  # install TensorFlow (CPU version).
  - travis_retry pip install tensorflow==$TF_VERSION --progress-bar off

  # remove tensorflow an requirements.txt
  - sed -i "/tensorflow/d" requirements.txt
  # install all other requirements
  - travis_retry pip install -r requirements.txt --progress-bar off
  # install testing requirements
  - travis_retry pip install -r requirements-test.txt --progress-bar off

  # install deepcell with setup.py
  # - python setup.py install
  - python setup.py build_ext --inplace

script:
  - PYTHONPATH=$PWD:$PYTHONPATH pytest --cov=deepcell --pep8
  - PYTHONPATH=$PWD:$PYTHONPATH sphinx-build -nT -b dummy ./docs/source build/html

jobs:
  include:
    - stage: deploy
      if: tag IS present
      env: TF_VERSION=1.14.0
      python: 3.6
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      # build an image with the CPU TensorFlow base image
      - docker build --build-arg TF_VERSION=$TF_VERSION -t "$TRAVIS_REPO_SLUG" .
      - docker images
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":latest
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":"${TRAVIS_TAG}"
      - docker push "$TRAVIS_REPO_SLUG"
      # edit the requirements and Dockerfile to build the GPU TensorFlow base image
      - docker build --build-arg TF_VERSION=$TF_VERSION-gpu -t "$TRAVIS_REPO_SLUG" .
      - docker images
      - docker tag "$TRAVIS_REPO_SLUG" "$TRAVIS_REPO_SLUG":"${TRAVIS_TAG}-gpu"
      - docker push "$TRAVIS_REPO_SLUG"

after_success:
  - coveralls

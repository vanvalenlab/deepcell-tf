
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "data-gallery/dynamicnuclearnet.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_data-gallery_dynamicnuclearnet.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_data-gallery_dynamicnuclearnet.py:


DynamicNuclearNet
=================

DynamicNuclearNet is a training dataset for nuclear segmentation and tracking published in
Schwartz et al. 2023. The dataset is made up of two subsets, one for tracking and one for
segmentation.

This dataset is licensed under a modified Apache license for non-commercial academic use only
http://www.github.com/vanvalenlab/deepcell-tf/LICENSE

The dataset can be accessed using `deepcell.datasets` with a DeepCell API key.

TODO add api key info

Tracking
^^^^^^^^
Each batch of the dataset contains three components
    - X: raw fluorescent nuclear data
    - y: nuclear segmentation masks
    - lineages: lineage records including the cell id, frames present and division
      links from parent to daughter cells

.. GENERATED FROM PYTHON SOURCE LINES 24-31

.. code-block:: default


    from deepcell.datasets.dynamic_nuclear_net import DynamicNuclearNetTracking

    dnn_trk = DynamicNuclearNetTracking(version='1.0')
    X_val, y_val, lineage_val = dnn_seg.load_data(split='val')
    data_source = dnn_seg.load_source_metadata()


.. GENERATED FROM PYTHON SOURCE LINES 32-38

Segmentation
^^^^^^^^^^^^
Each batch of the dataset includes three components
    - X: raw fluorescent nuclear data
    - y: nuclear segmentation masks
    - metadata: description of the source of each batch

.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: default


    from deepcell.datasets.dynamic_nuclear_net import DynamicNuclearNetSegmentation

    dnn_seg = DynamicNuclearNetSegmentation(version='1.0')
    X_val, y_val, meta_val = dnn_seg.load_data(split='val')



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_data-gallery_dynamicnuclearnet.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: dynamicnuclearnet.py <dynamicnuclearnet.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: dynamicnuclearnet.ipynb <dynamicnuclearnet.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
